<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wordpress on Hello. I&#39;m Dean Clatworthy</title>
    <link>https://deanclatworthy.com/categories/wordpress.html</link>
    <description>Recent content in Wordpress on Hello. I&#39;m Dean Clatworthy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Jul 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://deanclatworthy.com/categories/wordpress/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stopping mass-login attempts to WordPress using nginx</title>
      <link>https://deanclatworthy.com/2013/07/stopping-mass-login-attempts-to-wordpress-using-nginx/</link>
      <pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2013/07/stopping-mass-login-attempts-to-wordpress-using-nginx/</guid>
      <description>Rather than rehash all the information, let me point you in the direction of this great blog post:
http://ethitter.com/2013/04/protecting-wp-login-in-nginx/
If you have problems with wp-login.php being downloaded to the user then your PHP configuration using this tutorial is wrong. See this article I wrote about it:
http://deanclatworthy.com/2013/02/migrating-from-apache-to-nginx-wordpress-edition/</description>
    </item>
    
    <item>
      <title>Migrating from apache to nginx (wordpress edition)</title>
      <link>https://deanclatworthy.com/2013/02/migrating-from-apache-to-nginx-wordpress-edition/</link>
      <pubDate>Thu, 28 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2013/02/migrating-from-apache-to-nginx-wordpress-edition/</guid>
      <description>&lt;p&gt;Today I migrated my whole site from apache to nginx. The main reason for this being that nginx seems to handle load and use less memory on smaller boxes. It&amp;rsquo;s also an opportunity for me to try something new.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll cut straight to the chase. There&amp;rsquo;s some &lt;a href=&#34;http://codex.wordpress.org/Nginx&#34;&gt;great information&lt;/a&gt; &lt;a href=&#34;http://wiki.nginx.org/WordPress&#34;&gt;already available&lt;/a&gt;. At the time of this writing though, both sets of instructions didn&amp;rsquo;t work for me. I&amp;rsquo;ll come to why later.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to remove WordPress admin &amp; other pointless WordPress things from your Google Analytics</title>
      <link>https://deanclatworthy.com/2012/12/how-to-remove-wordpress-admin-other-pointless-wordpress-things-from-your-google-analytics/</link>
      <pubDate>Sat, 29 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2012/12/how-to-remove-wordpress-admin-other-pointless-wordpress-things-from-your-google-analytics/</guid>
      <description>I have spent the last few hours taking a look at the Google Analytics for my blog and whilst doing so I realised that it&amp;rsquo;s logging a lot of stuff that I don&amp;rsquo;t need. This tutorial will allow you to exclude any traffic to your wordpress admin, or login script (that which you see before landing on the admin page) from your Google Analytics.
 Log into Google Analytics Click &amp;lsquo;Admin&amp;rsquo; in the top right.</description>
    </item>
    
    <item>
      <title>How to speed up your WordPress site by 200% in less than 5 minutes and save bandwidth</title>
      <link>https://deanclatworthy.com/2012/12/how-to-speed-up-your-wordpress-site-by-200-in-less-than-5-minutes-and-save-bandwidth/</link>
      <pubDate>Sat, 29 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2012/12/how-to-speed-up-your-wordpress-site-by-200-in-less-than-5-minutes-and-save-bandwidth/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been meaning to tweak my WordPress install for a while now. I&amp;rsquo;ve been using the &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-super-cache/&#34;&gt;WP Super Cache plugin&lt;/a&gt;Â for about half a year, but I&amp;rsquo;ve been unimpressed by the performance. Anyone who has spent time optimising a site will already know the basic following checklist (plenty of things left out):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Minify and join CSS &amp;amp; Javascript files&lt;/li&gt;
&lt;li&gt;Load JS asynchronously at the bottom of the page where possible&lt;/li&gt;
&lt;li&gt;Load static pages if you can&lt;/li&gt;
&lt;li&gt;Let the user cache everything if possible.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>WordPress plugin deployment script (GIT to SVN)</title>
      <link>https://deanclatworthy.com/2011/01/wordpress-plugin-deployment-script-git-to-svn/</link>
      <pubDate>Fri, 21 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2011/01/wordpress-plugin-deployment-script-git-to-svn/</guid>
      <description>Short Version: This script will allow you to manage your wordpress plugins in git, and deploy them to wordpress.org SVN.
Long Version:
Recently at work I was required to build a wordpress plugin. After trawling through the documentation to figure out what I needed to do, it became apparent that to get my plugin listed in the WordPress plugins directory I would be required to host the code in their SVN repository.</description>
    </item>
    
  </channel>
</rss>
