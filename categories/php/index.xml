<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on Hello. I&#39;m Dean Clatworthy</title>
    <link>https://deanclatworthy.com/categories/php.html</link>
    <description>Recent content in Php on Hello. I&#39;m Dean Clatworthy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jul 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://deanclatworthy.com/categories/php.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Getting a twitter user&#39;s latest posts using API v1.1 and Guzzle (PHP)</title>
      <link>https://deanclatworthy.com/2013/07/getting-a-twitter-users-latest-posts-using-api-v1-1-and-guzzle-php/</link>
      <pubDate>Mon, 15 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2013/07/getting-a-twitter-users-latest-posts-using-api-v1-1-and-guzzle-php/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ll keep this brief. Install [Guzzle][1] however you wish, but I recommend using composer:&lt;/p&gt;

&lt;p&gt;{% highlight javascript %}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    {
        &amp;quot;require&amp;quot;: {
            &amp;quot;guzzle/guzzle&amp;quot;: &amp;quot;~3.1.1&amp;quot;
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;p&gt;Then use the following code:&lt;/p&gt;

&lt;p&gt;{% highlight php startinline %}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $twitter_client = new \Guzzle\Http\Client(&#39;https://api.twitter.com/{version}&#39;, array(
        &#39;version&#39; =&amp;gt; &#39;1.1&#39;
    ));
    $twitter_client-&amp;gt;addSubscriber(new \Guzzle\Plugin\Oauth\OauthPlugin(array(
        &#39;consumer_key&#39;  =&amp;gt; TWITTER_CONSUMER_KEY,
        &#39;consumer_secret&#39; =&amp;gt; TWITTER_CONSUMER_SECRET,
        &#39;token&#39;       =&amp;gt; TWITTER_ACCESS_TOKEN,
        &#39;token_secret&#39;  =&amp;gt; TWITTER_ACCESS_TOKEN_SECRET
    )));

    $request = $twitter_client-&amp;gt;get(&#39;statuses/user_timeline.json&#39;);
    $request-&amp;gt;getQuery()-&amp;gt;set(&#39;count&#39;, 5);
    $request-&amp;gt;getQuery()-&amp;gt;set(&#39;screen_name&#39;, &#39;YOURUSERNAME&#39;);
    $response = $request-&amp;gt;send();

    $tweets = json_decode($response-&amp;gt;getBody());
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t forget to put your constants somewhere.&lt;/p&gt;

&lt;p&gt;[1]: &lt;a href=&#34;http://guzzlephp.org/index.html&#34;&gt;http://guzzlephp.org/index.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ensuring facebook canvas applications work in IE8 / IE9 / IE10</title>
      <link>https://deanclatworthy.com/2013/05/ensuring-facebook-canvas-applications-work-in-ie9/</link>
      <pubDate>Fri, 17 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2013/05/ensuring-facebook-canvas-applications-work-in-ie9/</guid>
      <description>&lt;p&gt;Last week I deployed a new Facebook application into a production environment. Everything seemed to be working perfectly, but then I received a report that the application wasn&amp;rsquo;t working correctly in IE8+. I narrowed down the problem, and then realised that sessions weren&amp;rsquo;t working. It turns out IE8+ has a security policy that prevents iframes from setting cookies if the parent domain is different. Therefore because my PHP session cooking wouldn&amp;rsquo;t set, the sessions obviously didn&amp;rsquo;t work between pages.&lt;/p&gt;

&lt;p&gt;The good news is the fix is simple. Add this header to your page:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    header(&#39;p3p: CP=&amp;quot;NOI ADM DEV PSAi COM NAV OUR OTR STP IND DEM&amp;quot;&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to read more about this check this page:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/P3P&#34;&gt;http://en.wikipedia.org/wiki/P3P&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bonus: if using silex add this middleware:&lt;/p&gt;

&lt;p&gt;{% highlight php startinline %}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $app-&amp;gt;after(function (Request $request, Response $response) {
        $response-&amp;gt;headers-&amp;gt;set(&#39;p3p&#39;, &#39;CP=&amp;quot;NOI ADM DEV PSAi COM NAV OUR OTR STP IND DEM&amp;quot;&#39;);
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Silex Tip #1: How to quickly invalidate a form field in your controller</title>
      <link>https://deanclatworthy.com/2013/05/silex-tip-1-how-to-quickly-invalidate-a-form-field-in-your-controller/</link>
      <pubDate>Fri, 10 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2013/05/silex-tip-1-how-to-quickly-invalidate-a-form-field-in-your-controller/</guid>
      <description>&lt;p&gt;You should be using [custom constraints][1] to validate your form fields, however there are some use-cases where you need to quickly invalidate in a controller. To do this it&amp;rsquo;s quite easy:&lt;/p&gt;

&lt;p&gt;{% highlight php startinline %}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $form-&amp;gt;get(&#39;username&#39;)-&amp;gt;addError(new \Symfony\Component\Form\FormError(&amp;quot;This email is already in use&amp;quot;));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;p&gt;[1]: &lt;a href=&#34;http://symfony.com/doc/master/cookbook/validation/custom_constraint.html&#34;&gt;http://symfony.com/doc/master/cookbook/validation/custom_constraint.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Theming/styling error messages in Symfony 2</title>
      <link>https://deanclatworthy.com/2012/08/theming-error-messages-in-symfony-2/</link>
      <pubDate>Fri, 24 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2012/08/theming-error-messages-in-symfony-2/</guid>
      <description>&lt;p&gt;I spent a large portion of my day today trying to customize the HTML produced by Symfony 2 for form errors. The documentation has a section on how to do this, but for the life of me, I could not make it work. Here is a working, re-usable solution, with a brief explanation of the mistake I made at the end.&lt;/p&gt;

&lt;p&gt;In your SF2 bundle create a new file &lt;strong&gt;&lt;BundleName&gt;/Resources/views/Form/field_errors.html.twig&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    {% raw %}
    {# YourBundleName/Resources/views/Form/field_errors.html.twig #}
    {% block field_errors %}
    {% spaceless %}
    {% if errors|length &amp;gt; 0 %}
    &amp;lt;ul class=&amp;quot;error_list&amp;quot;&amp;gt;
        {% for error in errors %}
        &amp;lt;li&amp;gt;{{ error.messageTemplate|trans(error.messageParameters, &#39;validators&#39;) }}&amp;lt;/li&amp;gt;
        {% endfor %}
    &amp;lt;/ul&amp;gt;
    {% endif %}
    {% endspaceless %}
    {% endblock field_errors %}
    {% endraw %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then import this into your TWIG template like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% raw %}
{% form_theme form &#39;&amp;lt;YourNamespace&amp;gt;&amp;lt;BundleName&amp;gt;:Form:field_errors.html.twig&#39; %}
{% endraw %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One key point to note here is that you must concatenate your name space and bundle name. So &lt;strong&gt;Namespace:BundleName&lt;/strong&gt; won&amp;rsquo;t work but &lt;strong&gt;NamespaceBundleName&lt;/strong&gt; will. This is the mistake I was making. It turns out that when you create a bundle it&amp;rsquo;s given an alias and by default it&amp;rsquo;s a concatenation of your namespace and bundlename, so when referencing it in TWIG it appears you need to use this alias.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unique filenames when uploading using Zend_Filter_File_Rename (Zend Framework)</title>
      <link>https://deanclatworthy.com/2012/07/unique-filenames-when-uploading-using-zend_filter_file_rename-zend-framework/</link>
      <pubDate>Thu, 19 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2012/07/unique-filenames-when-uploading-using-zend_filter_file_rename-zend-framework/</guid>
      <description>&lt;p&gt;I came across a scenario today where I needed to ensure that files uploaded always had a unique name and wouldn&amp;rsquo;t over-write a file which has the same name. ZF provides this facility but it&amp;rsquo;s not particularly well documented and I had some troubles using a couple of examples I found across the web. Alas, here is the solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a new form element&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whether you do this in a new instance of Zend_Form or one you instantiate in your controller is up to you. My example adds it to an instance of Zend_Form:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;php&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$element&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;new&lt;/span&gt; Zend_Form_Element_File&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;screenshot&#39;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000088;&#34;&gt;$element&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;setLabel&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900; font-weight: bold;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;setDestination&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;APPLICATION_PATH &lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;/path/to/uploads&#39;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000088;&#34;&gt;$element&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;addValidator&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;Count&#39;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #009900; font-weight: bold;&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000088;&#34;&gt;$element&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;addValidator&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;Extension&#39;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #009900; font-weight: bold;&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;jpg,png,gif&#39;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000088;&#34;&gt;$element&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;setRequired&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900; font-weight: bold;&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000088;&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;addElement&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$element&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Handle the upload before the file is saved in your controller:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By getting access to Zend_File_Transfer_Adapter_Http we can intercept the file before it is moved to the already-defined destination path. At this point we apply a filter to the upload which will rename the file.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;php&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$post&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000088;&#34;&gt;$request&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;getPost&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;// This contains the POST params&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #b1b100;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$request&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;isPost&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #b1b100;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$form&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;isValid&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$post&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
&amp;nbsp;
                &lt;span style=&#34;color: #000088;&#34;&gt;$upload&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;new&lt;/span&gt; Zend_File_Transfer_Adapter_Http&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color: #000088;&#34;&gt;$filename&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000088;&#34;&gt;$upload&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;getFilename&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color: #000088;&#34;&gt;$filename&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #990000;&#34;&gt;basename&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$filename&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&amp;nbsp;
&amp;nbsp;
                &lt;span style=&#34;color: #000088;&#34;&gt;$uniqueToken&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #990000;&#34;&gt;md5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #990000;&#34;&gt;uniqid&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #990000;&#34;&gt;mt_rand&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #009900; font-weight: bold;&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color: #000088;&#34;&gt;$filterRename&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;new&lt;/span&gt; Zend_Filter_File_Rename&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #990000;&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;target&#39;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;/path/to/uploads/&#39;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color: #000088;&#34;&gt;$uniqueToken&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$filename&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;overwrite&#39;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #009900; font-weight: bold;&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color: #000088;&#34;&gt;$upload&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;addFilter&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$filterRename&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&amp;nbsp;
                &lt;span style=&#34;color: #b1b100;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$upload&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;receive&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
                    &lt;span style=&#34;color: #000088;&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;view&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;Error receiving the file&#39;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
                    &lt;span style=&#34;color: #b1b100;&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
                &lt;span style=&#34;color: #000088;&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;view&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #004000;&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;Screenshot(s) successfully uploaded&#39;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Bad character encoding causing MySQL errors in PHP</title>
      <link>https://deanclatworthy.com/2011/06/bad-character-encoding-causing-mysql-errors-in-php/</link>
      <pubDate>Thu, 09 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2011/06/bad-character-encoding-causing-mysql-errors-in-php/</guid>
      <description>&lt;p&gt;Today at work I encountered a peculiar problem when working with some translations. I developed a system whereby we can send out translations to our translators and they&amp;rsquo;ll fill in the blanks and send it back to use which is then imported. Part of this project involved coding a parser for a custom file format to send out to our translators. The benefit of this is it allowed me to validate incoming translation files, as well as easily export them according to the spec I&amp;rsquo;d defined.&lt;/p&gt;

&lt;p&gt;We received an Italian translation file and I proceeded to import it until my colleague noticed a few translations were missing. Baffled, I looked into this further and debugged until I spotted some MySQL errors in the logs. The query looked fine, but gave MySQL error number 1366. After a bit of googling I came across users who had received a similar error and had put it down to character encoding issues. It turns out that the translation file had been saved as ISO 8859-1 (Latin-1) rather than UTF-8. It turned out that MySQL was actually refusing to execute the query because the target string I was inserting into a UTF-8 column wasn&amp;rsquo;t valid.&lt;/p&gt;

&lt;p&gt;Rather than go through the complicated process of trying to cast different character sets coming in from various translators I came up with a simple solution which was to open the translation file and check it&amp;rsquo;s contents are strict UTF-8. This is pretty simple to do:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;php&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100;&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #990000;&#34;&gt;mb_detect_encoding&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000088;&#34;&gt;$str&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;UTF-8&#39;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #009900; font-weight: bold;&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100;&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;new&lt;/span&gt; TranslationException&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&#39;File is invalid UTF-8&#39;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;As a quick side note, omit the last parameter if you don&amp;rsquo;t want to be 100% strict.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jump In Camp</title>
      <link>https://deanclatworthy.com/2010/04/jump-in-camp/</link>
      <pubDate>Tue, 13 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://deanclatworthy.com/2010/04/jump-in-camp/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;//deanclatworthy.com/img/uploads/2010/04/4499556648_5a5da0a301.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-45&#34; title=&#34;4499556648_5a5da0a301&#34; src=&#34;//deanclatworthy.com/img/uploads/2010/04/4499556648_5a5da0a301.jpg&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;332&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
(Thanks to &lt;a href=&#34;http://www.flickr.com/photos/derickrethans/4499556648/sizes/l/&#34;&gt;Derick Rethans&lt;/a&gt; for the picture)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introductions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I was lucky enough to be given the opportunity last week to attend &lt;a href=&#34;http://www.jumpincamp.com/en/Default.aspx&#34;&gt;JumpInCamp&lt;/a&gt;, a developers conference/workshop ran by Microsoft in the beautiful setting of Zurich. The brief was as follows&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As a participant you will spend four unforgettable and instructive days in the &lt;a href=&#34;http://www.jumpincamp.com/en/Camp/Default.aspx&#34;&gt;Panorama Resort &amp;amp; Spa Feusisberg&lt;/a&gt;, Switzerland – all-inclusive, for free. A live blog – to which you will contribute &amp;#8211; will put all your friends and colleagues in the picture while you’re at the Camp.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I was sold ;-)&lt;/p&gt;

&lt;p&gt;Upon arriving at the airport I met with a few of the fellow attendees at the camp before setting off for the hotel. After a speedy check-in, we all went for a buffet dinner giving everyone a chance to introduce themselves and sample the first of many delicious meals that were to come!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Day 1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Day 1 of camp started off too bright and early giving us our first introduction to the main topic of the week: &lt;a href=&#34;http://www.microsoft.com/windowsazure/windowsazure/&#34;&gt;Windows Azure&lt;/a&gt;. &lt;a href=&#34;http://www.joshholmes.com/blog/&#34;&gt;Josh Holmes&lt;/a&gt; gave us a great overview of the platform and the technology that powers it. Most interesting perhaps, was the system Microsoft has put in place to deploy Azure nodes around the world incredibly easily.&lt;/p&gt;

&lt;p&gt;Next up was Faith Allington who gave us a presentation on the &lt;a href=&#34;http://www.iis.net/webpi&#34;&gt;Web Platform Installer (Web PI)&lt;/a&gt; which provides an interesting interface for deploying web applications to IIS. The smart &lt;a href=&#34;http://www.phpbb&#34;&gt;phpBB&lt;/a&gt; guys got a working version of their software into the web gallery during the week which can be found &lt;a href=&#34;http://area51.phpbb.com/phpBB/viewtopic.php?f=3&amp;amp;t=32736&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After lunch &lt;a href=&#34;http://blog.maartenballiauw.be/&#34;&gt;Maarten Balliauw&lt;/a&gt; gave us a great introduction to the &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/dd573356.aspx&#34;&gt;Windows Azure Storage platform&lt;/a&gt; and instructions on how to use the excellent &lt;a href=&#34;http://phpazure.codeplex.com/&#34;&gt;SDK&lt;/a&gt; he&amp;rsquo;s developed for interacting with the platform. I&amp;rsquo;ll discuss this further in a separate blog post.&lt;/p&gt;

&lt;p&gt;After a few hours coding, we began the first of two surprise activities: Alpine Olympics. We split into three teams and undertook the following games:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cow pat golf &amp;#8211; Attempting to putt, chip a gold ball in the world&amp;rsquo;s longest grass into a hole made out of cow pat. Credit goes to &lt;a href=&#34;http://www.naderman.de/&#34;&gt;Nils Aderman&lt;/a&gt; who drove his ball about 20m past the hole with a putter :-)&lt;/li&gt;
&lt;li&gt;Cow milking &amp;#8211; Having reluctantly milked a cow in the past, I was relieved to find out (for the cow&amp;rsquo;s sake as much as mine) that we would be milking a fake cow. Josh Holmes stole the show on this one apparently having been a dairy farmer in his colourful past.&lt;/li&gt;
&lt;li&gt;Blow darts &amp;#8211; Blow a dart down a tube into a target. &lt;a href=&#34;http://derickrethans.nl/&#34;&gt;Derick Rethans&lt;/a&gt; was so accurate he actually hit one of his darts with another&lt;/li&gt;
&lt;li&gt;Skiing &amp;#8211; 5 men, 2 planks of wood and one excellent exercise in co-ordination.&lt;/li&gt;
&lt;li&gt;Archery &amp;#8211; Having broke the first bow with my brute English strength I undertook the task of using the second extremely strong bow only reserved for the strongest of archers. Yuri Yatsev gets an apology here for leaving him bruised the next day having to pull the crossbow back for everyone :p&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whilst my team didn&amp;rsquo;t win, the team that did kindly shared their victory prize of champagne with the rest of the group which was a nice touch! Another delicious dinner wrapped up a superb evening of fun and games.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Day 2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another early start proved more difficult than the previous day due to the white wine on offer the previous night. The first talk of the day was given by Corrado Cavalli who gave us an introduction to &lt;a href=&#34;http://www.silverlight.net/&#34;&gt;Silverlight&lt;/a&gt;. Whilst I&amp;rsquo;m not sold on the use of another third-party plugin required to view content in the browser (yes, I&amp;rsquo;m talking to you Flash) Alex pointed out that Silverlight can also be used to develop Windows Phone 7 apps. I think this is something I&amp;rsquo;ll definitely be looking into in the next few weeks as all the tools needed to do this are free unlike some other competitors (*cough* Apple *cough*). There&amp;rsquo;s a great tutorial for &lt;a href=&#34;http://weblogs.asp.net/scottgu/archive/2010/03/18/building-a-windows-phone-7-twitter-application-using-silverlight.aspx&#34;&gt;Building a Windows Phone 7 twitter application using silverlight&lt;/a&gt; if anyone is interested in this too :)&lt;/p&gt;

&lt;p&gt;Next up was &lt;a href=&#34;http://www.alexweinstein.net/wordpress/&#34;&gt;Alex Weinstein&lt;/a&gt; who introduced us to a fantastic tool that&amp;rsquo;s coming out of Microsoft Labs called &lt;a href=&#34;http://www.getpivot.com&#34;&gt;Pivot&lt;/a&gt;. It allows you to view interesting trends in data sets through a fantastic series of visualizations used to drill down on the data. I&amp;rsquo;d be very interested to see some tools built for this to export data from relational databases into the required format for pivot to view.&lt;/p&gt;

&lt;p&gt;The last talk of the day came from Claudio Caldato who caught my interest with a &lt;a href=&#34;http://ssrsphp.codeplex.com/&#34;&gt;PHP SDK for interacting with SQL Server Reporting Services&lt;/a&gt;. You can do some fantastic things with reporting services so it&amp;rsquo;s nice that we no longer have to rely on using .NET to interact with it. Great job!&lt;/p&gt;

&lt;p&gt;After all the talks and final round of coding was done we were finally told about our surprise dinner which would involve going to a brewery to make our own beer. We learnt about the history of beer and kudos must go to all the people who made the double entrendres whilst learning about the brewing process ;-) The highlight of the night came when we were tasked with bottling our own beer. A simple task one might imagine, but without strong hands and patience you can end up spraying litres of beer all over yourself and anyone nearby. Mark from OSC managed to seemingly empty a whole tank of beer on to himself and everyone else in the room. Pictures, videos and other viral material of this will come soon I am sure. Here&amp;rsquo;s a picture of my beer:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.deanclatworthy.com/?attachment_id=43&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-43&#34; title=&#34;beer&#34; src=&#34;//deanclatworthy.com/img/uploads/2010/04/beer-225x300.gif&#34; alt=&#34;&#34; width=&#34;225&#34; height=&#34;300&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Day 3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jason Stowe from the SQL Server team gave us a great round up on the features available in SQL Server 2008 including &lt;a href=&#34;http://www.microsoft.com/sqlserver/2008/en/us/spatial-data.aspx&#34;&gt;Spatial Data&lt;/a&gt; and lots of other interesting tid bits. Then for the rest of the day everyone worked hard on their own individual projects before the final round up from Josh.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think everyone agreed the event was a resounding success and everyone learnt a great deal about the technologies Microsoft has been working on. The location, facilities and support that Microsoft gave everyone at the conference worked extremely well. Everyone from Microsoft was helpful, receptive to feedback and friendly throughout the camp which can only go to help improving the relationship Microsoft has within the open source community. A big thanks must go to Yuriy Zaytsev, Nicole Zahnd and Josh Holmes who did an excellent job putting the even together and hopefully we&amp;rsquo;ll see this event repeated some time in the future!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Photos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.flickr.com/photos/derickrethans/4499789952/&#34;&gt;http://www.flickr.com/photos/derickrethans/4499789952/&lt;/a&gt; (Derick)&lt;br /&gt;
&lt;a href=&#34;http://www.flickr.com/photos/derickrethans/4499556648/&#34;&gt;http://www.flickr.com/photos/derickrethans/4499556648/&lt;/a&gt; (Derick)&lt;br /&gt;
&lt;a href=&#34;http://yuriy-zaytsev.smugmug.com/Professional/jumpincamp/11828007_YXa7U#836070437_nZ9YS&#34;&gt;http://yuriy-zaytsev.smugmug.com/Professional/jumpincamp/11828007_YXa7U#836070437_nZ9YS&lt;/a&gt; (Yuri)&lt;br /&gt;
&lt;a href=&#34;http://www.facebook.com/album.php?aid=2057793&amp;amp;id=1385949843&#34;&gt;http://www.facebook.com/album.php?aid=2057793&amp;amp;id=1385949843&lt;/a&gt; (Vitaly)&lt;br /&gt;
&lt;a href=&#34;http://picasaweb.google.ch/109246690083550473241/JumpInCampBeerDinner?feat=directlink&#34;&gt;http://picasaweb.google.ch/109246690083550473241/JumpInCampBeerDinner?feat=directlink&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If anyone has any more photos please send me a [tweet][22]&lt;/p&gt;

&lt;p&gt;[22]: &lt;a href=&#34;http://www.twitter.com/deanclatworthy&#34;&gt;http://www.twitter.com/deanclatworthy&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>